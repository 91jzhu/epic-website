{"version":3,"file":"static/js/67.cb65e38b.chunk.js","mappings":"gNAQMA,GAAWC,EAAAA,EAAAA,KAAS,WACtB,IAAOC,GAAaC,EAAAA,EAAAA,KAAbD,UACDE,GAAEC,EAAAA,EAAAA,MA+BR,OACI,SAACC,EAAD,WACI,UAACC,EAAD,YACI,0CACA,UAAC,IAAD,CACIC,KAAK,QACLC,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,IACnBE,SAtCC,SAACC,GACdC,QAAQC,IAAI,WAAYF,GACxBX,EAAUc,YAAYH,EAAOI,UAC7Bf,EAAUgB,YAAYL,EAAOM,gBAC7BjB,EAAUkB,WAAWC,MAAK,WACtBP,QAAQC,IAAI,0DACZX,EAAE,QACJ,WACEU,QAAQC,IAAI,kDA+BJO,eA3BO,SAACC,GACpBT,QAAQC,IAAI,UAAWQ,IA2BXC,aAAa,MANjB,WAQI,SAAC,SAAD,CACIC,MAAM,qBACNjB,KAAK,WACLkB,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,wCAAU,CAACC,UA9B1C,SAACC,EAASC,GAC7B,MAAI,qBAAqBC,KAAKD,GAG3BA,EAAME,OAAO,GAAGF,EAAME,OAAO,GACrBC,QAAQC,OAAO,8CAEnBD,QAAQE,UALJF,QAAQC,OAAO,+EAyBd,UAKI,SAAC,IAAD,OAGJ,SAAC,SAAD,CACIV,MAAM,eACNjB,KAAK,gBACLkB,MAAO,CACH,CAACC,UAAU,EAAMC,QAAS,kCAC1B,CAACS,IAAI,EAAET,QAAQ,qCACf,CAACU,IAAI,GAAGV,QAAQ,uCANxB,UASI,SAAC,aAAD,OAGJ,SAAC,SAAD,CACIH,MAAM,2BACNjB,KAAK,iBACLkB,MAAO,CAAC,CAACC,UAAU,EAAMC,QAAS,8CAzC/B,SAACW,GAAD,MAAU,CAC7BV,UAD6B,SACnBC,EAASC,GACf,OAAGQ,EAAEC,cAAc,mBAAmBT,EAAaG,QAAQE,UACpDF,QAAQC,OAAO,sCAmCd,UAKI,SAAC,aAAD,OAGJ,SAAC,SAAD,CAAWxB,WAAY,CAAC8B,OAAQ,EAAG/B,KAAM,IAAzC,UACI,SAAC,IAAD,CAAQgC,KAAK,UAAUC,SAAS,SAAhC,iCASlBrC,EAAQsC,EAAAA,GAAAA,IAAD,oJAQPrC,EAAMqC,EAAAA,GAAAA,IAAD,kLAUX","sources":["pages/Register.tsx"],"sourcesContent":["import {observer} from \"mobx-react\";\r\nimport {useStores} from \"../store\";\r\nimport React from \"react\";\r\nimport {Form, Input, Button, Checkbox} from 'antd';\r\nimport styled from \"styled-components\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nconst Register = observer(() => {\r\n    const {AuthStore} = useStores()\r\n    const h=useNavigate()\r\n    const onFinish = (values: any) => {\r\n        console.log('Success:', values);\r\n        AuthStore.setUserName(values.username)\r\n        AuthStore.setPassWord(values.passwordSecond)\r\n        AuthStore.register().then(()=>{\r\n            console.log('注册成功，跳转首页')\r\n            h('/')\r\n        },()=>{\r\n            console.log('注册失败，不动')\r\n        })\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo: any) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    const validateUserName=(rule:any,value:any)=>{\r\n        if(!/^[0-9a-zA-Z_]{1,}$/.test(value)){\r\n            return Promise.reject('只能为数字，字母或下划线')\r\n        }\r\n        if(value.length<4||value.length>10){\r\n            return Promise.reject('长度为 4-10 个字符')\r\n        }\r\n        return Promise.resolve()\r\n    }\r\n    const validatePassWord=(x:any)=>({\r\n        validator(rule:any,value:string){\r\n            if(x.getFieldValue('passwordFirst')===value)return Promise.resolve()\r\n            return Promise.reject('密码不一致')\r\n        }\r\n    })\r\n    return (\r\n        <Wrapper>\r\n            <Forms>\r\n                <h2>注册</h2>\r\n                <Form\r\n                    name=\"basic\"\r\n                    labelCol={{span: 6}}\r\n                    wrapperCol={{span: 15}}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <Form.Item\r\n                        label=\"用户名\"\r\n                        name=\"username\"\r\n                        rules={[{required: true, message: '请输入用户名'},{validator:validateUserName}]}\r\n                    >\r\n                        <Input/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"密码\"\r\n                        name=\"passwordFirst\"\r\n                        rules={[\r\n                            {required: true, message: '请输入密码'},\r\n                            {min:4,message:'最少 5 个字符'},\r\n                            {max:10,message:'最大 10 个字符'}\r\n                        ]}\r\n                    >\r\n                        <Input.Password/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"确认密码\"\r\n                        name=\"passwordSecond\"\r\n                        rules={[{required: true, message: '请再次输入密码'},validatePassWord]}\r\n                    >\r\n                        <Input.Password/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item wrapperCol={{offset: 6, span: 15}}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Forms>\r\n        </Wrapper>\r\n    )\r\n})\r\nconst Wrapper=styled.div`\r\n  width:100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex:1;\r\n`\r\nconst Forms=styled.div`\r\n  box-shadow:1px 1px 1px lightgrey,-1px -1px 1px lightgrey;\r\n  width:40vw;\r\n  padding:12px;\r\n  margin-bottom: 12px;\r\n  h2{\r\n    text-align: center;\r\n  }\r\n`\r\n\r\nexport default Register"],"names":["Register","observer","AuthStore","useStores","h","useNavigate","Wrapper","Forms","name","labelCol","span","wrapperCol","onFinish","values","console","log","setUserName","username","setPassWord","passwordSecond","register","then","onFinishFailed","errorInfo","autoComplete","label","rules","required","message","validator","rule","value","test","length","Promise","reject","resolve","min","max","x","getFieldValue","offset","type","htmlType","styled"],"sourceRoot":""}